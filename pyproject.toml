[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hipaa-qa-system"
version = "0.1.0"
description = "HIPAA Regulation QA System using RAG with OpenAI and pgvector"
readme = "README.md"
requires-python = ">=3.9"
license = {text = "MIT"}
authors = [
    {name = "HIPAA QA Team", email = "team@example.com"}
]
keywords = ["hipaa", "rag", "qa", "chatbot", "openai", "pgvector"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Legal",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

dependencies = [
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "openai>=1.3.0",
    "asyncpg>=0.29.0",
    "pgvector>=0.2.4",
    "sqlalchemy[asyncio]>=2.0.23",
    "numpy>=1.24.0",
    "gradio>=4.7.1",
    "python-multipart>=0.0.6",
    "httpx>=0.25.0",
    "python-dotenv>=1.0.0",
    "tenacity>=8.2.3",
    "loguru>=0.7.2",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "pytest-cov>=4.1.0",
]

[project.urls]
Homepage = "https://github.com/example/hipaa-qa-system"
Documentation = "https://github.com/example/hipaa-qa-system#readme"
Repository = "https://github.com/example/hipaa-qa-system.git"
Issues = "https://github.com/example/hipaa-qa-system/issues"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["hipaa_qa"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
show_column_numbers = true
show_error_codes = true
show_error_context = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--cov=src/hipaa_qa",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]